-> nm_server "7","-ssl2","-accept","4433","-cert","md5rsa.pem","-key","md5rsakey.pem"
After the s_server_init func
hello windriver
Inside while loop
argc after decrement 6, argv is -accept
Inside while loop
argc after decrement 4, argv is -cert
Inside while loop
At strcmp -cert condition
certfile is md5rsa.pem
argc after decrement 2, argv is -key
Inside while loop
argc after decrement 0, argv is (null)
protocol_version:- 2
from BIO_Printf
Inside ssl_create_cipher_list function in ssl_cipher.c file
TOT Number of ciphers are :6
**Inside ssl12_get_cipher func *** u value:=0**Inside ssl12_get_cipher func *** u value:=1**Inside ssl12_get_cipher func *** u value:=2**Inside ssl12_get_cipher func *** u value:=3**Inside ssl12_get_cipher func *** u value:=4**Inside ssl12_get_cipher func *** u value:=5Pushing to cipherstack:RC4-MD5,id=2010080
Pushing to cipherstack:DES-CBC3-MD5,id=20700c0
Pushing to cipherstack:DES-CBC-MD5,id=2060040
Pushing to cipherstack:EXP-RC4-MD5,id=2020080
8683792:error:060A209F:digital envelope routines:EVP_MD_size:message digest is null:evp_lib.c:269:
Using default temp DH parameters
ACCEPT
Inside ELSE condition, Before do_server func call in s_server.c
bad gethostbyaddr
Entring sv_body
RC4-MD5 value=2010080
DES-CBC3-MD5 value=20700c0
DES-CBC-MD5 value=2060040
EXP-RC4-MD5 value=2020080
Inside client hello function in s2_serve.c
List of server ciphers
++++Its coming to else before comparision
++++cs: RC4-MD5 value=2010080
After the cipher comparision and deletion
prio: RC4-MD5 value=2010080
allow: RC4-MD5 value=2010080
allow: DES-CBC3-MD5 value=20700c0
allow: DES-CBC-MD5 value=2060040
allow: EXP-RC4-MD5 value=2020080


Inside server_hello func
Value of i is 
1Entered ssl_cipher_list_to_bytes
 Before the for
value of sk_ssl_ciper_num  is =1,RC4-MD5
****After the for***1377
End of server_hello func
Entered ssl2_do_write func
Inside get_client_mastrer ksy function from server.c files
Leaving the get_client_master_key function in server.c files

 After the call of get_client_master_key() in s2_server.c file teh value of ret is 1=
Insdie the st_server_start encryption case in s2_server.c
Inside the ssl2_enc_init method
Done with ssl_replace_hash methods
After the call of evp_cipher_ctx_init function in s2_enc.c
Done with ethe openssl_assert function call
Entered ssl2_genrate_key_material s2_lib.c
Done with evp_md_ctx_init function call
Done with evp_md_size:16
evp_digest_init_ex call done
start of evp_digest_update call
Done with evp_digestUpdate first
Done with evp_digestUpdate second
Done with evp_digestUpdate third
Done with evp_digestUpdate fourth
Done with evp_digestFinal 
evp_digest_init_ex call done
start of evp_digest_update call
Done with evp_digestUpdate first
Done with evp_digestUpdate second
Done with evp_digestUpdate third
Done with evp_digestUpdate fourth
Done with evp_digestFinal 
Done with ssl2_generate_key_material
Done with second openssl_assert function
Done witht the evp_encryptinit 
End of ssl2_enc_inint function
before the server_verfy func
I am inside server_verify
Done with the server verify
Entered ssl2_do_write func
After the server_verfy func call, vluse ret:1Begining with teh client finish funvtion
Done with client finish function
Started in the server finsish function
Done with server finish fuction
Entered ssl2_do_write func
After the ssl_accept function call in s_server.c,i=1
 -----BEGIN SSL SESSION PARAMETERS-----
MEICAQECAQIEAwEAgAQQCvgIjWAEGEbZE89o19ACKQQQoDrm+UqnEFzGBuRTYFIQ
WaEDAgFHogQCAgEspAYEBAAAAAE=
-----END SSL SESSION PARAMETERS-----
Shared ciphers:RC4-MD5
CIPHER is RC4-MD5
Secure Renegotiation IS NOT supported
HELLO SFROM SERVER
HELLO FROM CLIENT
Q
DONE
shutdown accept socket
shutting down SSL
CONNECTION CLOSED
   1 items in the session cache
   0 client connects (SSL_connect())
   0 client renegotiates (SSL_connect())
   0 client connects that finished
   1 server accepts (SSL_accept())
   0 server renegotiates (SSL_accept())
   1 server accepts that finished
   0 session cache hits
   0 session cache misses
   0 session cache timeouts
   0 callback cache hits
   0 cache full overflows (128 allowed)
value = 0 = 0x0
-> 

